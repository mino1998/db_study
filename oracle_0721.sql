-- oracle은 DESC가 안먹는다. 
SELECT MAX(LEVEL)
FROM EMP
START WITH MGR IS NULL
CONNECT BY PRIOR EMPNO=MGR;

SELECT ENAME, EMPNO, MGR, CONNECT_BY_ISLEAF
FROM EMP
START WITH UPPER(JOB)='PRESIDENT'
CONNECT BY PRIOR EMPNO=MGR;
-- 출발점을 JONES로 설정
-- JONES의 부하직원 레벨을 조회
SELECT ENAME, EMPNO, MGR, CONNECT_BY_ISLEAF
FROM EMP
START WITH ENAME='JONES'
CONNECT BY PRIOR EMPNO=MGR;
-- JONES부터 상관을 조회
SELECT ENAME, EMPNO, MGR, CONNECT_BY_ISLEAF
FROM EMP
START WITH ENAME='JONES'
CONNECT BY PRIOR MGR=EMPNO;

-- ROWID를 알아보자.
SELECT ROWID, ENAME FROM EMP;

-- EMP 테이블에서 DEPTNO별로 한 명의 DEPTNO와 ENAME을 조회해보자.
-- DISTINCT 는 여러 개의 컬럼이 작성된다면 모든 컬럼의 값이 같아야 제거
SELECT DISTINCT ENAME, DEPTNO FROM EMP;
-- GROUPT BY는 그룹화하지 않은 컬럼을 SELECT 절에 출력할 수 없습니다.
SELECT DEPTNO, ENAME FROM EMP GROUP BY DEPTNO;
-- 다른 컬럼을 사용하지 않고, 그룹화 한 후 ROWID가 가장 큰 데이터를 추출
SELECT DEPTNO, ENAME FROM EMP WHERE ROWID IN (SELECT MAX(ROWID) FROM EMP GROUP BY DEPTNO);

-- 행 번호 조회
SELECT ROWNUM, ENAME FROM EMP;
-- 이건 나오지만
SELECT ROWNUM, ENAME FROM EMP
WHERE ROWNUM<3;
-- 이건 절대 못나온다.
SELECT ROWNUM, ENAME FROM EMP
WHERE ROWNUM>3;


-- 급여가 많은 순으로 조회해보자.
SELECT * FROM EMP ORDER BY SAL DESC;
-- 5개만 가져오고 싶다.
SELECT * FROM EMP ORDER BY SAL DESC OFFSET 0 ROWS FETCH NEXT 5 NEXT ONLY;

-- EMP 테이블에 사원이라는 SYNONYM을 생성
CREATE SYNONYM 사원
FOR EMP;
SELECT * FROM 사원;
SELECT * FROM EMP;


-- SEQUENCE
CREATE SEQUENCE DEPT_SEQ
	START WITH 70
	INCREMENT BY 10;
-- 값 확인하기
SELECT DEPT_SEQ.NEXTVAL
FROM DUAL; -- 오라클은 DUAL이라는 가짜 테이블을 써줘야함
-- SEQUENCE를 이용한 데이터 삽입
INSERT INTO DEPT(DEPTNO, DNAME, LOC) VALUES(DEPT_SEQ.CURRVAL, '바밤바','서울');
-- 들어갔는지 확인
SELECT * FROM DEPT;
DROP SEQUENCE DEPT_SEQ;
DELETE FROM DEPT WHERE DNAME='바밤바';



-- EMP 테이블에서 JOB 별로 SAL의 평균을 조회해보자.
-- 기존 GROUP BY
SELECT JOB, AVG(SAL) FROM EMP GROUP BY JOB;
-- 이번엔 ROLLUP , NULL로 나온다 마지막은
SELECT JOB, AVG(SAL) 급여평균 FROM EMP GROUP BY ROLLUP(JOB);
-- ORACLE은 IFNULL이 아니다. NVL(A,DEFAULT)
SELECT NVL(JOB, '전체') JOB , AVG(SAL) 급여평균 FROM EMP GROUP BY ROLLUP(JOB);

-- DEPTNO별로 SAL의 합계를 조회해보자.
SELECT NVL(DEPTNO, '전체') DEPTNO , SUM(SAL) 급여합계 FROM EMP GROUP BY ROLLUP(DEPTNO);
-- 숫자 컬럼은 DECODE를 통해 ROLLUP이 가능하게 해보자.
-- DECODE 값이 NULL이면 전체 그렇지 않으면 DEPTNO를 변환해서 조회
SELECT DECODE(DEPTNO,NULL, '전체', DEPTNO) DEPTNO , SUM(SAL) 급여합계 FROM EMP GROUP BY ROLLUP(DEPTNO);

-- 묶어서 처리하기도 좋다.
SELECT DEPTNO, JOB, SUM(SAL) 급여합계
FROM EMP
GROUP BY DEPTNO, ROLLUP(JOB)
ORDER BY DEPTNO;

-- 묶어서 처리하기도 좋다.
SELECT DEPTNO, JOB, SUM(SAL) 급여합계
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB)
ORDER BY DEPTNO;

-- CUBE를 써보자.
SELECT DEPTNO, JOB, SUM(SAL) 급여합계
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO;

-- GROUPING : 중간 집계면 1 아니면 0
SELECT DEPTNO, GROUPING(DEPTNO), JOB, GROUPING(JOB), SUM(SAL) 급여합계
FROM EMP
GROUP BY CUBE(DEPTNO,JOB)
ORDER BY DEPTNO;

-- GROUPING : 중간 집계면 1 아니면 0, 활용해보기- 타이틀을 만들려고 하는 거에요 주로
SELECT DEPTNO, DECODE(GROUPING(DEPTNO),1,'전체합계') AS ALLTOT, JOB, DECODE(GROUPING(JOB),1,'부서합계') AS DEPTTOT, SUM(SAL) 급여합계
FROM EMP
GROUP BY CUBE(DEPTNO,JOB)
ORDER BY DEPTNO;

-- GROUPING SET : 각 컬럼 별 집계를 보자.
-- ROLLUP과 비교해보기
SELECT DEPTNO, JOB,ENAME, SUM(SAL) 급여합계
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB, ENAME);
-- 이렇게 ROLLUP하면 부서 번호별로만 한다.
-- GROUPING SET
SELECT DEPTNO, JOB, SUM(SAL) 급여합계
FROM EMP
GROUP BY GROUPING SETS(DEPTNO, JOB);

-- EMP 테이블에서 전체 SAL에서 자신의 SAL의 비율을 알고 싶다.
SELECT ENAME, SAL FROM EMP;
-- 왜 오류야?
SELECT ENAME, SAL, SAL*100/SUM(SAL) OVER() FROM EMP;
-- SUM(SAL)은 1개 , SAL 은 여러개
-- SELECT에 쓰여진 애들은 CARDINALITY가 같아야 한다.


-- EMP 테이블에서 EMPNO, ENAME, SAL, 현재행까지의 SAL 합계를 조회
-- OVER 는 14개 다 맞추는거임
SELECT EMPNO, ENAME, SAL, SUM(SAL) OVER(ORDER BY SAL
	ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "현재 까지 누적 SAL 값"
FROM EMP;
--
-- EMP 테이블에서 EMPNO, ENAME, SAL, 현재행부터 마지막 행까지의 SAL 합계를 조회
-- OVER 는 14개 다 맞추는거임
SELECT EMPNO, ENAME, SAL, SUM(SAL) OVER(ORDER BY SAL
	ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS "현재 까지 누적 SAL 값"
FROM EMP;

-- 부서별 급여 평균을 구해보자.
SELECT EMPNO, ENAME, SAL, ROUND(AVG(SAL) OVER(PARTITION BY DEPTNO),2) "부서별 급여 평균"
FROM EMP;

-- 부서별 급여 순위
SELECT DEPTNO,ENAME, SAL,
RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) "RANK급여 순위",
DENSE_RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) "DENSE급여 순위",
ROW_NUMBER () OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) "RM급여 순위"
FROM EMP;

-- PIVOT
SELECT JOB, DEPTNO, SAL FROM EMP
PIVOT(MAX(SAL) FOR DEPTNO IN(10,20,30));